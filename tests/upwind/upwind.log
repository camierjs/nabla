[nabla] Command line specifies debug file: upwind.log
[nabla] Command line hits long option okina
[nabla] Command line specifies new OKINA nabla_entity_name: upwind
[nabla] Command line specifies OKINA's STD option
[nabla] Command line specifies OKINA's SEQ option
[nabla] first input_file_list: upwind.n 
[nabla] next input_file_list: upwind.n analytics.n 
[sysPreprocessor] cat_sed_temporary_file_name is /tmp/nabla_upwind_sed_1Cs4Ql

[sysPreprocessor] cat_command is echo '# 1 "upwind.n"' > /tmp/nabla_upwind_sed_1Cs4Ql && cat upwind.n|sed -e 's/#include/ include/g'>> /tmp/nabla_upwind_sed_1Cs4Ql

[sysPreprocessor] cat_command is echo '# 1 "upwind.n"' > /tmp/nabla_upwind_sed_1Cs4Ql && cat upwind.n|sed -e 's/#include/ include/g'>> /tmp/nabla_upwind_sed_1Cs4Ql && echo '# 1 "analytics.n"' >> /tmp/nabla_upwind_sed_1Cs4Ql && cat analytics.n|sed -e 's/#include/ include/g'>> /tmp/nabla_upwind_sed_1Cs4Ql
[sysPreprocessor] gcc_command=gcc -ffreestanding -std=c99 -C -E -Wall -x c /tmp/nabla_upwind_sed_1Cs4Ql>/proc/14467/fd/4
[nablaPreprocessor] done!
[nabla] Now triggering nablaParsing with these options
[nablaParsing] Starting parsing
[nablaParsing] Closing & Quit
[nablaParsing] On scan l'arbre pour transformer les tokens en UTF8
[nablaParsing] nabla_entity_name=upwind
[nablaParsing] nabla_input_file=analytics.n
[nablaParsing] Now launching nablaMiddlendSwitch
	[nablaMiddlendInit] setting nabla->name to 'upwind'
	[nablaMiddlendInit] CrÃ©ation de notre premier entity
	[nablaMiddlendInit] Rajout du 'main'
	[nablaMiddlendInit] Rajout du nom de l'entity 'upwind'
	[nablaMiddlendInit] Rajout du name_upcase de l'entity UPWIND
	[nablaMiddlendInit] Returning nabla
	[nablaMiddlendSwitch] On initialise le type de backend (= 0x4) et de ses variantes (= 0x1080)
	[nablaMiddlendSwitch] On rajoute les variables globales
	[nablaMiddlendVariableGlobalAdd] Adding global deltat, time
	[nablaMiddlendVariableGlobalAdd] Adding AoS variables Real3 coord
	[nablaMiddlendSwitch] Now switching...
	[nablaMiddlendParseAndHook] with_library hit!
	[nablaLibraries] Real single_library hit!
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_options_definition
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] option_a
		[actOptionsExpression] rule=expression
			[catTillToken] 1.0
		[actOptionsExpression] final option->dflt is '1.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] al
		[actOptionsExpression] rule=expression
			[catTillToken] 1.0
		[actOptionsExpression] final option->dflt is '1.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] bt
		[actOptionsExpression] rule=expression
			[catTillToken] 8.0
		[actOptionsExpression] final option->dflt is '8.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] xmin
		[actOptionsExpression] rule=expression
			[catTillToken] -
			[catTillToken] 1.0
		[actOptionsExpression] final option->dflt is '-1.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] xmax
		[actOptionsExpression] rule=expression
			[catTillToken] +
			[catTillToken] 1.0
		[actOptionsExpression] final option->dflt is '+1.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] CFL
		[actOptionsExpression] rule=expression
			[catTillToken] 0.8
		[actOptionsExpression] final option->dflt is '0.8'
		[actGenericOptionsTypeSpecifier] Integer
		[actGenericOptionsDirectDeclarator] test
		[actOptionsExpression] rule=expression
			[catTillToken] 1
		[actOptionsExpression] final option->dflt is '1'
		[actGenericOptionsTypeSpecifier] Integer
		[actGenericOptionsDirectDeclarator] time_steps
		[actOptionsExpression] rule=expression
			[catTillToken] 3
		[actOptionsExpression] final option->dflt is '3'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] option_dtt_initial
		[actOptionsExpression] rule=expression
			[catTillToken] 0.0
		[actOptionsExpression] final option->dflt is '0.0'
		[actGenericOptionsTypeSpecifier] Real
		[actGenericOptionsDirectDeclarator] option_stoptime
		[actOptionsExpression] rule=expression
			[catTillToken] 1.0
		[actOptionsExpression] final option->dflt is '1.0'
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule nabla_item_definition,  support nodes
		[actItemTypeSpecifier] node:Real
		[actItemDirectDeclarator] u
		[actItemTypeSpecifier] node:Real
		[actItemDirectDeclarator] unp1
		[actItemTypeSpecifier] node:Real
		[actItemDirectDeclarator] dtxp
		[actItemTypeSpecifier] node:Real
		[actItemDirectDeclarator] dtxm
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule nabla_item_definition,  support global
		[actItemTypeSpecifier] global:Real
		[actItemDirectDeclarator] dtx
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit function_definition

	[nablaFctFill] 
	[nablaFctFill] Looking for fct->rtntp:
	[nablaFctFill] fct->rtntp=void
	[nablaFctFill] On refait (sic) pour le noeud
	[nablaFctFill] On va chercher le nom de la fonction
	[nablaFctFill] Qui est: 'iniGlobals'
	[nablaFctFill] Coté UTF-8, on a: 'iniGlobals'
	[nablaFctFill] On va chercher la list des paramètres
	[nablaFctFill] scope=NoGroup region=NoRegion item= type=void name=iniGlobals
	[scanForNablaJobAtConstant] @ '-' '-5.0' 
	[nablaStoreWhen] Storing when @=-5.000000 
	[nablaFctFill] Now fillinf SRC file
	[nablaFctFill] On va chercher les paramètres standards pour le src
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaFctFill] adding ExtraParameters
	[nablaFctFill] launching dfsForCalls
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaFctFill] On avance jusqu'au compound_statement
	[nablaFctFill] prefixEnumerate
	[nablaFctFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=

	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=

	[nablaFctFill] postfixEnumerate
	[nablaFctFill] Now dumping function tokens
		[nablaFunctionParse] TOKEN 'dtx'
	[nablaVariableFind] looking for 'dtx' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Yes!
	[okinaHookTurnTokenToVariable] global_dtx token=dtx
		[nablaFunctionParse] TOKEN '='
	[nablaVariableFind] looking for '=' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opDiv'
	[nablaVariableFind] looking for 'opDiv' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opSub'
	[nablaVariableFind] looking for 'opSub' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'xmax'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'xmin'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'X_EDGE_ELEMS'
	[nablaVariableFind] looking for 'X_EDGE_ELEMS' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'deltat'
	[nablaVariableFind] looking for 'deltat' ?deltat Yes!
	[okinaHookTurnTokenToVariable] global_deltat token=deltat
		[nablaFunctionParse] TOKEN '='
	[nablaVariableFind] looking for '=' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opDiv'
	[nablaVariableFind] looking for 'opDiv' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opMul'
	[nablaVariableFind] looking for 'opMul' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'CFL'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'dtx'
	[nablaVariableFind] looking for 'dtx' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Yes!
	[okinaHookTurnTokenToVariable] global_dtx token=dtx
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'option_a'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*call*/'
	[nablaFunctionParse] CALL
	[nablaFunctionParse] CALL done
		[nablaFunctionParse] TOKEN 'assert'
	[nablaVariableFind] looking for 'assert' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'deltat'
	[nablaVariableFind] looking for 'deltat' ?deltat Yes!
	[okinaHookTurnTokenToVariable] global_deltat token=deltat
		[nablaFunctionParse] TOKEN '>='
	[nablaVariableFind] looking for '>=' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '0.0'
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*args*/'
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '}'
	[nablaVariableFind] looking for '}' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
	[nablaFctFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_job_definition

	[nablaJobFill] named 'inidtx'
	[nablaJobFill] scope= region= item=nodes type_de_retour=void name=inidtx
	[scanForNablaJobAtConstant] @ '-' '-5.0' 
	[nablaStoreWhen] Storing when @=-5.000000 
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaJobFill] numParams=0
	[nablaJobFill] On s'autorise un endroit pour insérer des paramètres
	[nablaJobFill] Et on dump les in et les out
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaJobFill] On prépare le bon ENUMERATE
	[nablaJobFill] On avance jusqu'au COMPOUND_JOB_INI afin de sauter les listes de paramètres
	[nablaJobFill] On cherche s'il y a un selection statement
	[nablaJobFill] Found a selection statement in this job!
	[nablaJobFill] prefixEnumerate
	[nablaJobFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=FOR_EACH_NODE%s%s(n
	[okinaHookDumpEnumerate]		warping=
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=FOR_EACH_NODE%s%s(n)
	[nablaJobFill] postfixEnumerate
	[nablaJobFill] postfixEnumerate done
	[nablaJobFill] Now parsing...
[nablaJobParse] token: 'COMPOUND_JOB_INI'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_INI'?
[nablaJobParse] token: '{'?
	[okinaHookSwitchToken] token: '{'?
[nablaJobParse] token: 'if'?
	[okinaHookSwitchToken] token: 'if'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '!='?
	[okinaHookSwitchToken] token: '!='?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
	[nablaJobParse] primaryExpression=primary_expression child->token=dtxm
	[nablaVariableFind] looking for 'dtxm' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm Yes!
	[okinaHookTurnTokenToVariable] node_dtxm token=dtxm
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaVariable] Looking for 'primary_expression':
	[nablaVariable] Looking for 'nabla_item':
	[nablaVariable] Looking for 'nabla_system':
	[nablaVariable] primary_expression->token=coord, nabla_item=NULL, nabla_system=NULL
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '['?
	[okinaHookSwitchToken] token: '['?
[nablaJobParse] token: '-'?
	[okinaHookSwitchToken] token: '-'?
	[nablaJobParse] primaryExpression=primary_expression child->token=1
	[nablaVariableFind] looking for '1' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '1'?
	[okinaHookSwitchToken] token: '1'?
[nablaJobParse] token: ']'?
	[okinaHookSwitchToken] token: ']'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: 'if'?
	[okinaHookSwitchToken] token: 'if'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '!='?
	[okinaHookSwitchToken] token: '!='?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
	[nablaJobParse] primaryExpression=primary_expression child->token=dtxp
	[nablaVariableFind] looking for 'dtxp' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp Yes!
	[okinaHookTurnTokenToVariable] node_dtxp token=dtxp
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaVariable] Looking for 'primary_expression':
	[nablaVariable] Looking for 'nabla_item':
	[nablaVariable] Looking for 'nabla_system':
	[nablaVariable] primary_expression->token=coord, nabla_item=NULL, nabla_system=NULL
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '['?
	[okinaHookSwitchToken] token: '['?
[nablaJobParse] token: '+'?
	[okinaHookSwitchToken] token: '+'?
	[nablaJobParse] primaryExpression=primary_expression child->token=1
	[nablaVariableFind] looking for '1' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '1'?
	[okinaHookSwitchToken] token: '1'?
[nablaJobParse] token: ']'?
	[okinaHookSwitchToken] token: ']'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: '}'?
	[okinaHookSwitchToken] token: '}'?
[nablaJobParse] token: 'COMPOUND_JOB_END'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_END'?
	[nablaJobFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_job_definition

	[nablaJobFill] named 'iniU'
	[nablaJobFill] scope= region= item=nodes type_de_retour=void name=iniU
	[scanForNablaJobParameter] in (node,coord) (node,u)
	[scanForNablaJobAtConstant] @ '-' '-4.0' 
	[nablaStoreWhen] Storing when @=-4.000000 
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaJobFill] numParams=0
	[nablaJobFill] On s'autorise un endroit pour insérer des paramètres
	[nablaJobFill] Et on dump les in et les out
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookDumpNablaParameterList] Looking for variable 'coord'
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookDumpNablaParameterList] Looking for variable 'u'
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaJobFill] On prépare le bon ENUMERATE
	[nablaJobFill] On avance jusqu'au COMPOUND_JOB_INI afin de sauter les listes de paramètres
	[nablaJobFill] On cherche s'il y a un selection statement
	[nablaJobFill] No selection statement in this job!
	[nablaJobFill] prefixEnumerate
	[nablaJobFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=FOR_EACH_NODE%s%s(n
	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=FOR_EACH_NODE%s%s(n)
	[nablaJobFill] postfixEnumerate
	[nablaJobFill] postfixEnumerate done
	[nablaJobFill] Now parsing...
[nablaJobParse] token: 'COMPOUND_JOB_INI'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_INI'?
[nablaJobParse] token: '{'?
	[okinaHookSwitchToken] token: '{'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
	[nablaJobParse] primaryExpression=primary_expression child->token=0.0
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '0.0'?
	[okinaHookSwitchToken] token: '0.0'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opTernary'?
	[okinaHookSwitchToken] token: 'opTernary'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=(
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: '=='?
	[okinaHookSwitchToken] token: '=='?
	[nablaJobParse] primaryExpression=primary_expression child->token=1
	[nablaVariableFind] looking for '1' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '1'?
	[okinaHookSwitchToken] token: '1'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
[nablaJobParse] token: '/*call*/'?
	[okinaHookSwitchToken] token: '/*call*/'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u0_Test1_for_linear_advection_smooth_data
	[nablaVariableFind] looking for 'u0_Test1_for_linear_advection_smooth_data' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'u0_Test1_for_linear_advection_smooth_data'?
	[okinaHookSwitchToken] token: 'u0_Test1_for_linear_advection_smooth_data'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '/*args*/'?
	[okinaHookSwitchToken] token: '/*args*/'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opTernary'?
	[okinaHookSwitchToken] token: 'opTernary'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=(
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: '=='?
	[okinaHookSwitchToken] token: '=='?
	[nablaJobParse] primaryExpression=primary_expression child->token=2
	[nablaVariableFind] looking for '2' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '2'?
	[okinaHookSwitchToken] token: '2'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
[nablaJobParse] token: '/*call*/'?
	[okinaHookSwitchToken] token: '/*call*/'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u0_Test2_for_linear_advection_discontinuous_data
	[nablaVariableFind] looking for 'u0_Test2_for_linear_advection_discontinuous_data' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'u0_Test2_for_linear_advection_discontinuous_data'?
	[okinaHookSwitchToken] token: 'u0_Test2_for_linear_advection_discontinuous_data'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '/*args*/'?
	[okinaHookSwitchToken] token: '/*args*/'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: '}'?
	[okinaHookSwitchToken] token: '}'?
[nablaJobParse] token: 'COMPOUND_JOB_END'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_END'?
	[nablaJobFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_job_definition

	[nablaJobFill] named 'loop'
	[nablaJobFill] scope= region= item=nodes type_de_retour=void name=loop
	[scanForNablaJobParameter] in (node,u)
	[scanForNablaJobAtConstant] @ '1.0' 
	[nablaStoreWhen] Storing when @=1.000000 
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaJobFill] numParams=0
	[nablaJobFill] On s'autorise un endroit pour insérer des paramètres
	[nablaJobFill] Et on dump les in et les out
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookDumpNablaParameterList] Looking for variable 'u'
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaJobFill] On prépare le bon ENUMERATE
	[nablaJobFill] On avance jusqu'au COMPOUND_JOB_INI afin de sauter les listes de paramètres
	[nablaJobFill] On cherche s'il y a un selection statement
	[nablaJobFill] No selection statement in this job!
	[nablaJobFill] prefixEnumerate
	[nablaJobFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=FOR_EACH_NODE%s%s(n
	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=FOR_EACH_NODE%s%s(n)
	[nablaJobFill] postfixEnumerate
	[nablaJobFill] postfixEnumerate done
	[nablaJobFill] Now parsing...
[nablaJobParse] token: 'COMPOUND_JOB_INI'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_INI'?
[nablaJobParse] token: '{'?
	[okinaHookSwitchToken] token: '{'?
[nablaJobParse] token: 'const'?
	[okinaHookSwitchToken] token: 'const'?
[nablaJobParse] token: 'Real'?
	[okinaHookSwitchToken] token: 'Real'?
[nablaJobParse] token: 'ap'?
	[okinaHookSwitchToken] token: 'ap'?
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: '/*call*/'?
	[okinaHookSwitchToken] token: '/*call*/'?
	[nablaJobParse] primaryExpression=primary_expression child->token=fmax
	[nablaVariableFind] looking for 'fmax' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'fmax'?
	[okinaHookSwitchToken] token: 'fmax'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=0.0
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '0.0'?
	[okinaHookSwitchToken] token: '0.0'?
[nablaJobParse] token: '/*args*/'?
	[okinaHookSwitchToken] token: '/*args*/'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: 'const'?
	[okinaHookSwitchToken] token: 'const'?
[nablaJobParse] token: 'Real'?
	[okinaHookSwitchToken] token: 'Real'?
[nablaJobParse] token: 'am'?
	[okinaHookSwitchToken] token: 'am'?
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: '/*call*/'?
	[okinaHookSwitchToken] token: '/*call*/'?
	[nablaJobParse] primaryExpression=primary_expression child->token=fmin
	[nablaVariableFind] looking for 'fmin' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'fmin'?
	[okinaHookSwitchToken] token: 'fmin'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression hits option
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=0.0
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '0.0'?
	[okinaHookSwitchToken] token: '0.0'?
[nablaJobParse] token: '/*args*/'?
	[okinaHookSwitchToken] token: '/*args*/'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: 'const'?
	[okinaHookSwitchToken] token: 'const'?
[nablaJobParse] token: 'Real'?
	[okinaHookSwitchToken] token: 'Real'?
[nablaJobParse] token: 'dttSx'?
	[okinaHookSwitchToken] token: 'dttSx'?
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opDiv'?
	[okinaHookSwitchToken] token: 'opDiv'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=deltat
	[nablaVariableFind] looking for 'deltat' ?deltat Yes!
	[okinaHookTurnTokenToVariable] global_deltat token=deltat
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=dtx
	[nablaVariableFind] looking for 'dtx' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Yes!
	[okinaHookTurnTokenToVariable] global_dtx token=dtx
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: 'const'?
	[okinaHookSwitchToken] token: 'const'?
[nablaJobParse] token: 'Real'?
	[okinaHookSwitchToken] token: 'Real'?
[nablaJobParse] token: 'cp'?
	[okinaHookSwitchToken] token: 'cp'?
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opMul'?
	[okinaHookSwitchToken] token: 'opMul'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=ap
	[nablaVariableFind] looking for 'ap' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'ap'?
	[okinaHookSwitchToken] token: 'ap'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=dttSx
	[nablaVariableFind] looking for 'dttSx' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'dttSx'?
	[okinaHookSwitchToken] token: 'dttSx'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: 'const'?
	[okinaHookSwitchToken] token: 'const'?
[nablaJobParse] token: 'Real'?
	[okinaHookSwitchToken] token: 'Real'?
[nablaJobParse] token: 'cm'?
	[okinaHookSwitchToken] token: 'cm'?
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opMul'?
	[okinaHookSwitchToken] token: 'opMul'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=am
	[nablaVariableFind] looking for 'am' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'am'?
	[okinaHookSwitchToken] token: 'am'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=dttSx
	[nablaVariableFind] looking for 'dttSx' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'dttSx'?
	[okinaHookSwitchToken] token: 'dttSx'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
	[nablaJobParse] primaryExpression=primary_expression child->token=unp1
	[nablaVariableFind] looking for 'unp1' ?deltat ?time ?coord ?iteration ?u ?unp1 Yes!
	[okinaHookTurnTokenToVariable] node_unp1 token=unp1
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
[nablaJobParse] token: 'opMul'?
	[okinaHookSwitchToken] token: 'opMul'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=cp
	[nablaVariableFind] looking for 'cp' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'cp'?
	[okinaHookSwitchToken] token: 'cp'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=(
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaVariable] Looking for 'primary_expression':
	[nablaVariable] Looking for 'nabla_item':
	[nablaVariable] Looking for 'nabla_system':
	[nablaVariable] primary_expression->token=u, nabla_item=NULL, nabla_system=NULL
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '['?
	[okinaHookSwitchToken] token: '['?
[nablaJobParse] token: '-'?
	[okinaHookSwitchToken] token: '-'?
	[nablaJobParse] primaryExpression=primary_expression child->token=1
	[nablaVariableFind] looking for '1' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '1'?
	[okinaHookSwitchToken] token: '1'?
[nablaJobParse] token: ']'?
	[okinaHookSwitchToken] token: ']'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
[nablaJobParse] token: 'opMul'?
	[okinaHookSwitchToken] token: 'opMul'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaJobParse] primaryExpression=primary_expression child->token=cm
	[nablaVariableFind] looking for 'cm' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'cm'?
	[okinaHookSwitchToken] token: 'cm'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=(
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
[nablaJobParse] token: 'opSub'?
	[okinaHookSwitchToken] token: 'opSub'?
[nablaJobParse] token: '('?
	[okinaHookSwitchToken] token: '('?
	[nablaVariable] Looking for 'primary_expression':
	[nablaVariable] Looking for 'nabla_item':
	[nablaVariable] Looking for 'nabla_system':
	[nablaVariable] primary_expression->token=u, nabla_item=NULL, nabla_system=NULL
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '['?
	[okinaHookSwitchToken] token: '['?
[nablaJobParse] token: '+'?
	[okinaHookSwitchToken] token: '+'?
	[nablaJobParse] primaryExpression=primary_expression child->token=1
	[nablaVariableFind] looking for '1' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '1'?
	[okinaHookSwitchToken] token: '1'?
[nablaJobParse] token: ']'?
	[okinaHookSwitchToken] token: ']'?
[nablaJobParse] token: ','?
	[okinaHookSwitchToken] token: ','?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ')'?
	[okinaHookSwitchToken] token: ')'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: '}'?
	[okinaHookSwitchToken] token: '}'?
[nablaJobParse] token: 'COMPOUND_JOB_END'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_END'?
	[nablaJobFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_job_definition

	[nablaJobFill] named 'copyResults'
	[nablaJobFill] scope= region= item=nodes type_de_retour=void name=copyResults
	[scanForNablaJobParameter] in (node,u)
	[scanForNablaJobAtConstant] @ '2.0' 
	[nablaStoreWhen] Storing when @=2.000000 
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaJobFill] numParams=0
	[nablaJobFill] On s'autorise un endroit pour insérer des paramètres
	[nablaJobFill] Et on dump les in et les out
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookDumpNablaParameterList] Looking for variable 'u'
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaJobFill] On prépare le bon ENUMERATE
	[nablaJobFill] On avance jusqu'au COMPOUND_JOB_INI afin de sauter les listes de paramètres
	[nablaJobFill] On cherche s'il y a un selection statement
	[nablaJobFill] No selection statement in this job!
	[nablaJobFill] prefixEnumerate
	[nablaJobFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=FOR_EACH_NODE%s%s(n
	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=FOR_EACH_NODE%s%s(n)
	[nablaJobFill] postfixEnumerate
	[nablaJobFill] postfixEnumerate done
	[nablaJobFill] Now parsing...
[nablaJobParse] token: 'COMPOUND_JOB_INI'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_INI'?
[nablaJobParse] token: '{'?
	[okinaHookSwitchToken] token: '{'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '='?
	[okinaHookSwitchToken] token: '='?
	[nablaJobParse] primaryExpression=primary_expression child->token=unp1
	[nablaVariableFind] looking for 'unp1' ?deltat ?time ?coord ?iteration ?u ?unp1 Yes!
	[okinaHookTurnTokenToVariable] node_unp1 token=unp1
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: '}'?
	[okinaHookSwitchToken] token: '}'?
[nablaJobParse] token: 'COMPOUND_JOB_END'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_END'?
	[nablaJobFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit nabla_job_definition

	[nablaJobFill] named 'dumpSolution'
	[nablaJobFill] scope= region= item=nodes type_de_retour=void name=dumpSolution
	[scanForNablaJobParameter] in (node,u)
		[dumpParameterTypeList] number_of_parameters_here+=1
		[dumpParameterTypeList] File
		[dumpParameterTypeList] results
	[nablaJobFill] numParams=1
	[nablaJobFill] On s'autorise un endroit pour insérer des paramètres
	[nablaJobFill] Et on dump les in et les out
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookDumpNablaParameterList] Looking for variable 'u'
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[okinaHookDumpNablaParameterList]
	[nablaJobFill] On prépare le bon ENUMERATE
	[nablaJobFill] On avance jusqu'au COMPOUND_JOB_INI afin de sauter les listes de paramètres
	[nablaJobFill] On cherche s'il y a un selection statement
	[nablaJobFill] No selection statement in this job!
	[nablaJobFill] prefixEnumerate
	[nablaJobFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=FOR_EACH_NODE%s%s(n
	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=FOR_EACH_NODE%s%s(n)
	[nablaJobFill] postfixEnumerate
	[nablaJobFill] postfixEnumerate done
	[nablaJobFill] Now parsing...
[nablaJobParse] token: 'COMPOUND_JOB_INI'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_INI'?
[nablaJobParse] token: '{'?
	[okinaHookSwitchToken] token: '{'?
	[nablaJobParse] primaryExpression=primary_expression child->token=results
	[nablaVariableFind] looking for 'results' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: 'results'?
	[okinaHookSwitchToken] token: 'results'?
[nablaJobParse] token: '<<'?
	[okinaHookSwitchToken] token: '<<'?
	[nablaJobParse] primaryExpression=primary_expression child->token=coord
	[nablaVariableFind] looking for 'coord' ?deltat ?time ?coord Yes!
	[okinaHookTurnTokenToVariable] node_coord token=coord
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '<<'?
	[okinaHookSwitchToken] token: '<<'?
	[nablaJobParse] primaryExpression=primary_expression child->token="\t"
	[nablaVariableFind] looking for '"\t"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '"\t"'?
	[okinaHookSwitchToken] token: '"\t"'?
[nablaJobParse] token: '<<'?
	[okinaHookSwitchToken] token: '<<'?
	[nablaJobParse] primaryExpression=primary_expression child->token=u
	[nablaVariableFind] looking for 'u' ?deltat ?time ?coord ?iteration ?u Yes!
	[okinaHookTurnTokenToVariable] node_u token=u
	[actJobItemParse] primaryExpression hits variable
[nablaJobParse] token: '<<'?
	[okinaHookSwitchToken] token: '<<'?
	[nablaJobParse] primaryExpression=primary_expression child->token="\n"
	[nablaVariableFind] looking for '"\n"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
[nablaJobParse] token: '"\n"'?
	[okinaHookSwitchToken] token: '"\n"'?
[nablaJobParse] token: ';'?
	[okinaHookSwitchToken] token: ';'?
[nablaJobParse] token: '}'?
	[okinaHookSwitchToken] token: '}'?
[nablaJobParse] token: 'COMPOUND_JOB_END'?
	[okinaHookSwitchToken] token: 'COMPOUND_JOB_END'?
	[nablaJobFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit function_definition

	[nablaFctFill] 
	[nablaFctFill] Looking for fct->rtntp:
	[nablaFctFill] fct->rtntp=void
	[nablaFctFill] On refait (sic) pour le noeud
	[nablaFctFill] On va chercher le nom de la fonction
	[nablaFctFill] Qui est: 'tstForQuit'
	[nablaFctFill] Coté UTF-8, on a: 'tstForQuit'
	[nablaFctFill] On va chercher la list des paramètres
	[nablaFctFill] scope=NoGroup region=NoRegion item= type=void name=tstForQuit
	[scanForNablaJobAtConstant] @ '4.0' 
	[nablaStoreWhen] Storing when @=4.000000 
	[nablaFctFill] Now fillinf SRC file
	[nablaFctFill] On va chercher les paramètres standards pour le src
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaFctFill] adding ExtraParameters
	[nablaFctFill] launching dfsForCalls
		[dumpParameterTypeList] number_of_parameters_here+=1
	[nablaFctFill] On avance jusqu'au compound_statement
	[nablaFctFill] prefixEnumerate
	[nablaFctFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=

	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=

	[nablaFctFill] postfixEnumerate
	[nablaFctFill] Now dumping function tokens
		[nablaFunctionParse] TOKEN 'if'
	[nablaVariableFind] looking for 'if' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'GlobalIteration'
	[nablaVariableFind] looking for 'GlobalIteration' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '>='
	[nablaVariableFind] looking for '>=' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'time_steps'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '{'
	[nablaVariableFind] looking for '{' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'file'
	[nablaVariableFind] looking for 'file' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'results'
	[nablaVariableFind] looking for 'results' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'plot'
	[nablaVariableFind] looking for 'plot' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*call*/'
	[nablaFunctionParse] CALL
	[nablaFunctionParse] CALL done
		[nablaFunctionParse] TOKEN 'printf'
	[nablaVariableFind] looking for 'printf' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '"\n\t[testForQuit] GlobalIteration>time_steps, dumping\n"'
	[nablaVariableFind] looking for '"\n\t[testForQuit] GlobalIteration>time_steps, dumping\n"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*args*/'
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'results'
	[nablaVariableFind] looking for 'results' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<<'
	[nablaVariableFind] looking for '<<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '"#33 "'
	[nablaVariableFind] looking for '"#33 "' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<<'
	[nablaVariableFind] looking for '<<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '"globalNbCells"'
	[nablaVariableFind] looking for '"globalNbCells"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<<'
	[nablaVariableFind] looking for '<<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '" "'
	[nablaVariableFind] looking for '" "' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<<'
	[nablaVariableFind] looking for '<<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '"globalNbNodes"'
	[nablaVariableFind] looking for '"globalNbNodes"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<<'
	[nablaVariableFind] looking for '<<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '"\n"'
	[nablaVariableFind] looking for '"\n"' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*call*/'
	[nablaFunctionParse] CALL
	[nablaFunctionParse] CALL done
		[nablaFunctionParse] TOKEN 'dumpSolution'
	[nablaVariableFind] looking for 'dumpSolution' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'results'
	[nablaVariableFind] looking for 'results' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*args*/'
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'exit'
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '}'
	[nablaVariableFind] looking for '}' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '}'
	[nablaVariableFind] looking for '}' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
	[nablaFctFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit function_definition

	[nablaFctFill] 
	[nablaFctFill] Looking for fct->rtntp:
	[nablaFctFill] fct->rtntp=Real
	[nablaFctFill] On refait (sic) pour le noeud
	[nablaFctFill] On va chercher le nom de la fonction
	[nablaFctFill] Qui est: 'u0_Test1_for_linear_advection_smooth_data'
	[nablaFctFill] Coté UTF-8, on a: 'u0_Test1_for_linear_advection_smooth_data'
	[nablaFctFill] On va chercher la list des paramètres
	[nablaFctFill] scope=NoGroup region=NoRegion item= type=Real name=u0_Test1_for_linear_advection_smooth_data
	[nablaFctFill] Now fillinf SRC file
	[nablaFctFill] On va chercher les paramètres standards pour le src
		[dumpParameterTypeList] number_of_parameters_here+=1
		[dumpParameterTypeList] Real
		[dumpParameterTypeList] x
	[nablaFctFill] adding ExtraParameters
	[nablaFctFill] launching dfsForCalls
		[dumpParameterTypeList] number_of_parameters_here+=1
		[dumpParameterTypeList] Real
		[dumpParameterTypeList] x
	[nablaFctFill] On avance jusqu'au compound_statement
	[nablaFctFill] prefixEnumerate
	[nablaFctFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=

	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=

	[nablaFctFill] postfixEnumerate
	[nablaFctFill] Now dumping function tokens
		[nablaFunctionParse] TOKEN 'return'
	[nablaVariableFind] looking for 'return' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opMul'
	[nablaVariableFind] looking for 'opMul' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'al'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*call*/'
	[nablaFunctionParse] CALL
	[nablaFunctionParse] CALL done
		[nablaFunctionParse] TOKEN 'exp'
	[nablaVariableFind] looking for 'exp' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'opMul'
	[nablaVariableFind] looking for 'opMul' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '-'
	[nablaVariableFind] looking for '-' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'bt'
	[nablaFunctionParse] OPTION hit!
		[nablaFunctionParse] TOKEN ','
	[nablaVariableFind] looking for ',' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'pow'
	[nablaVariableFind] looking for 'pow' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'x'
	[nablaVariableFind] looking for 'x' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ',2.0'
	[nablaVariableFind] looking for ',2.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '/*args*/'
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '}'
	[nablaVariableFind] looking for '}' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
	[nablaFctFill] done
	[nablaMiddlendParseAndHook] done
	[nablaMiddlendParseAndHook] rule hit function_definition

	[nablaFctFill] 
	[nablaFctFill] Looking for fct->rtntp:
	[nablaFctFill] fct->rtntp=Real
	[nablaFctFill] On refait (sic) pour le noeud
	[nablaFctFill] On va chercher le nom de la fonction
	[nablaFctFill] Qui est: 'u0_Test2_for_linear_advection_discontinuous_data'
	[nablaFctFill] Coté UTF-8, on a: 'u0_Test2_for_linear_advection_discontinuous_data'
	[nablaFctFill] On va chercher la list des paramètres
	[nablaFctFill] scope=NoGroup region=NoRegion item= type=Real name=u0_Test2_for_linear_advection_discontinuous_data
	[nablaFctFill] Now fillinf SRC file
	[nablaFctFill] On va chercher les paramètres standards pour le src
		[dumpParameterTypeList] number_of_parameters_here+=1
		[dumpParameterTypeList] Real
		[dumpParameterTypeList] x
	[nablaFctFill] adding ExtraParameters
	[nablaFctFill] launching dfsForCalls
		[dumpParameterTypeList] number_of_parameters_here+=1
		[dumpParameterTypeList] Real
		[dumpParameterTypeList] x
	[nablaFctFill] On avance jusqu'au compound_statement
	[nablaFctFill] prefixEnumerate
	[nablaFctFill] dumpEnumerate
	[okinaHookDumpEnumerate] Preparing:
	[okinaHookDumpEnumerate]		forall=

	[okinaHookDumpEnumerate]		warping=_WARP
	[okinaHookDumpEnumerate] No returnFromArgument
[okinaHookDumpEnumerate] format=

	[nablaFctFill] postfixEnumerate
	[nablaFctFill] Now dumping function tokens
		[nablaFunctionParse] TOKEN 'if'
	[nablaVariableFind] looking for 'if' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'x'
	[nablaVariableFind] looking for 'x' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<'
	[nablaVariableFind] looking for '<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '0.3'
	[nablaVariableFind] looking for '0.3' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'return'
	[nablaVariableFind] looking for 'return' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '0.0'
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'if'
	[nablaVariableFind] looking for 'if' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '('
	[nablaVariableFind] looking for '(' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'x'
	[nablaVariableFind] looking for 'x' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '<'
	[nablaVariableFind] looking for '<' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '0.7'
	[nablaVariableFind] looking for '0.7' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ')'
	[nablaVariableFind] looking for ')' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'return'
	[nablaVariableFind] looking for 'return' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '1.0'
	[nablaVariableFind] looking for '1.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN 'return'
	[nablaVariableFind] looking for 'return' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '0.0'
	[nablaVariableFind] looking for '0.0' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN ';'
	[nablaVariableFind] looking for ';' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
		[nablaFunctionParse] TOKEN '}'
	[nablaVariableFind] looking for '}' ?deltat ?time ?coord ?iteration ?u ?unp1 ?dtxp ?dtxm ?dtx Nope!
	[nablaFctFill] done
	[nablaMiddlendParseAndHook] done
[nccOkinaMainVarInit]
	[nccOkina] okinaMesh 1D !
[nccOkinaMainPrefix]
[okinaGenerateVariableDim0] variable coord
[okinaGenerateVariableDim0] variable coord
[okinaGenerateVariableDim0] variable u
[okinaGenerateVariableDim0] variable u
[okinaGenerateVariableDim0] variable unp1
[okinaGenerateVariableDim0] variable unp1
[okinaGenerateVariableDim0] variable dtxp
[okinaGenerateVariableDim0] variable dtxp
[okinaGenerateVariableDim0] variable dtxm
[okinaGenerateVariableDim0] variable dtxm
[okinaGenerateVariableDim0] variable dtx
[okinaGenerateVariableDim0] variable dtx
[nccOkinaMainMeshPrefix]
[nccOkinaMainPreInit]
[nccOkinaMainVarInitCall]
[nccOkinaMain]
	[nablaNumberOfEntryPoints] iniGlobals: whenx=1 @ -5.000000 
	[nablaNumberOfEntryPoints] inidtx: whenx=1 @ -5.000000 
	[nablaNumberOfEntryPoints] iniU: whenx=1 @ -4.000000 
	[nablaNumberOfEntryPoints] loop: whenx=1 @ 1.000000 
	[nablaNumberOfEntryPoints] copyResults: whenx=1 @ 2.000000 
	[nablaNumberOfEntryPoints] tstForQuit: whenx=1 @ 4.000000 
[nablaEntryPointsSort] Sorting 6 entry-points
	[nablaEntryPointsSort] dumping #2: iniGlobals @ -5.000000
	[nablaEntryPointsSort] dumping #3: inidtx @ -5.000000
	[nablaEntryPointsSort] dumping #4: iniU @ -4.000000
	[nablaEntryPointsSort] dumping #5: loop @ 1.000000
	[nablaEntryPointsSort] dumping #6: copyResults @ 2.000000
	[nablaEntryPointsSort] dumping #7: tstForQuit @ 4.000000

	[nccOkinaMain] sorted #0: iniGlobals @ -5.000000 in 'init'
	[nccOkinaMain] sorted #1: inidtx @ -5.000000 in 'init'
	[nccOkinaMain] sorted #2: iniU @ -4.000000 in 'init'
	[nccOkinaMain] sorted #4: loop @ 1.000000 in 'compute-loop'
	[nccOkinaMain] sorted #5: copyResults @ 2.000000 in 'compute-loop'
	[nccOkinaMain] sorted #6: tstForQuit @ 4.000000 in 'compute-loop'
[nccOkinaMainPostInit]
[nccOkinaMainMeshPostfix]
[okinaGenerateVariableDim0] variable coord
[okinaGenerateVariableDim0] variable u
[okinaGenerateVariableDim0] variable unp1
[okinaGenerateVariableDim0] variable dtxp
[okinaGenerateVariableDim0] variable dtxm
[okinaGenerateVariableDim0] variable dtx
[nccOkinaMainPostfix] OKINA_MAIN_POSTFIX
[nccOkinaMainPostfix] okinaSourceMesh
[nccOkinaMainPostfix] NABLA_OK