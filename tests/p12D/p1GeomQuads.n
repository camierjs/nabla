///////////////////////////////////////////////////////////////////////////////
// NABLA - a Numerical Analysis Based LAnguage                               //
//                                                                           //
// Copyright (C) 2014~2016 CEA/DAM/DIF                                       //
// IDDN.FR.001.520002.000.S.P.2014.000.10500                                 //
//                                                                           //
// Contributor(s): CAMIER Jean-Sylvain - Jean-Sylvain.Camier@cea.fr          //
//                 LABOURASSE Emmanuel - Emmanuel.Labourasse@cea.fr          //
//                                                                           //
// This software is a computer program whose purpose is to translate         //
// numerical-analysis specific sources and to generate optimized code        //
// for different targets and architectures.                                  //
//                                                                           //
// This software is governed by the CeCILL license under French law and      //
// abiding by the rules of distribution of free software. You can  use,      //
// modify and/or redistribute the software under the terms of the CeCILL     //
// license as circulated by CEA, CNRS and INRIA at the following URL:        //
// "http://www.cecill.info".                                                 //
//                                                                           //
// The CeCILL is a free software license, explicitly compatible with         //
// the GNU GPL.                                                              //
//                                                                           //
// As a counterpart to the access to the source code and rights to copy,     //
// modify and redistribute granted by the license, users are provided only   //
// with a limited warranty and the software's author, the holder of the      //
// economic rights, and the successive licensors have only limited liability.//
//                                                                           //
// In this respect, the user's attention is drawn to the risks associated    //
// with loading, using, modifying and/or developing or reproducing the       //
// software by the user in light of its specific status of free software,    //
// that may mean that it is complicated to manipulate, and that also         //
// therefore means that it is reserved for developers and experienced        //
// professionals having in-depth computer knowledge. Users are therefore     //
// encouraged to load and test the software's suitability as regards their   //
// requirements in conditions enabling the security of their systems and/or  //
// data to be ensured and, more generally, to use and operate it in the      //
// same conditions as regards security.                                      //
//                                                                           //
// The fact that you are presently reading this means that you have had      //
// knowledge of the CeCILL license and that you accept its terms.            //
//                                                                           //
// See the LICENSE file for details.                                         //
///////////////////////////////////////////////////////////////////////////////

// ****************************************************************************
// * Fonctions locales de géométrie
// ****************************************************************************
inline ℝ geomCross2D(ℝ³ _u,ℝ³ _v){ return ℝ(_u.x*_v.y - _u.y*_v.x);}
inline ℝ³ geomNormal(ℝ³ a, ℝ³ b){ return ℝ³(b.y-a.y,-b.x+a.x,0.0);}

// ****************************************************************************
// * Calcul de Δl: Length of the sides, before touching mesh
// ****************************************************************************
∀ faces calcΔl @ -30.2 { l=norm(coord[0]-coord[1]); }
∀ faces Δl <?= l @ -30.1;

// ****************************************************************************
// * randomDistortedQuads
// ****************************************************************************
∀ nodes randomDistortedQuads @ -29.0 {
  const ℝ α=option_rdq_α;
  const ℝ ρ1=drand48()+drand48()-1.0;
  const ℝ ρ2=drand48()+drand48()-1.0;
  if (coord.x == 0.0 || coord.x == LENGTH) continue;
  if (coord.y == 0.0 || coord.y == LENGTH) continue;
  coord.x+=α*ρ1*Δl;
  coord.y+=α*ρ2*Δl;
}

// ****************************************************************************
// * geomComputeSurfaceAndVolume @ -28.0 & 23.0
// ****************************************************************************
∀ cells X @ -28.1{//,23.0 {
  center=0;
  ∀ nodes center+=coord;
  center*=¼;
}
∀ cells V @ -28.1{//,23.0 {
  const ℝ³ fst_edge = coord[2]-coord[0];
  const ℝ³ snd_edge = coord[0]-coord[1];
  V=geomCross2D(fst_edge,snd_edge);
}

// ****************************************************************************
// * Calcul des résultantes aux sommets des mailles
// ****************************************************************************
∀ cells CQs @ -28.1{//,24.0
  ∀ nodes CQs = ½*geomNormal(coord[#-1],coord[#+1]); }
