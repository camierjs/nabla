∀ nodes void flushNodeB(void)@ 1.0
{
  nP=nU=0.0;

}    
 

// ********************************************************
// nU à l'intérieur
// ********************************************************
∀ nodes void computeNodB1(void)
 
  out (node nU) @ 2.0
{
  if (n==0) continue;
  if (n==(NABLA_NB_NODES-1)) continue;
  ℝ  r=2*epsilon;
  nU=0.0;
  ∀ cell
      {
        // maille de droite, on ajoute l'invariant de Rieman pour la vp 1
        if (center>coord)
          {
            r+=cM;
            nU+= cU -cP;
            // maille de gauche, on ajoute l'invariant de Rieman pour la vp 1
          }else
          {
            r-=cM;
            nU += cU + cP ;            
          }
    
      }
  r=epsilon/r;
  nU*=r;

  
   
 
}



// ********************************************************
// nP à  l'intérieur
// ********************************************************
∀ nodes void computeNodB2(void)
  out (node nP) @ 2.1
{
  if (n==0) continue;
  if (n==(NABLA_NB_NODES-1)) continue;
  ℝ  r=2*epsilon;
  nP=0.0;
  ∀ cell
      {
        
        if (center>coord)
          {
            nP+=(cP-cU)*(epsilon +nM-nM_moins);
            r+=cM;
            
            
          }else
          {
            nP+=(cP+cU)*(epsilon +nM_plus-nM);
            r+=-cM;
         
      
          }
    
      }
  nP*=1/r;
  //info()<<nP;
  // info()<<"nP="<<nP<<"coord="<<coord;

}
    
  



// ********************************************************
// nU et nP au bord droit
// ********************************************************
∀ nodes void outer0Loop1(void) 
  in (node nU, node nP/*, node nP, node nU*/)
  out (node nU,node nP)@ 2.4
{

  if (n!=0) continue;
  
    nU=0.0;
    nP=0.0;
    ℝ r=2*epsilon;
    ∀ cell
        {
          if (c==0) continue;
          nU+=(cU - cP);
          nP+=(-cU+cP)*(epsilon + nM-nM_moins) ;
          r+=cM;
    
        }
// ********************************************************
// nU et nP à la "maille fantôme" droite
// ********************************************************
    
    nU+=(U_condlimi(coord-δx*0.5,n_time) + P_condlimi(coord-δx*0.5,n_time));
  

    nP+= (U_condlimi(coord-δx*0.5,n_time) + P_condlimi(coord-δx*0.5,n_time))*(epsilon + nM_plus -nM);
    r+=-nM_moins;

    nP*=1/r;
    nU*=epsilon/r;

    
    //info()<<"nP="<<nP<<"coord="<<coord;
 
 
}


// ********************************************************
// nP et nU au bord gauche
// ********************************************************
∀ nodes void outer0Loop2(void)
  in (node nU, node nP/*, node nP, node nU*/)
  out (node nU, node nP)@ 2.45
{
  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
  if (n!=(NABLA_NB_NODES-1)) continue;
  // !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

  nU=0.0;
  nP=0.0;
  
  ℝ r=2*epsilon;
  ∀ cell
      {
        if (c==0) continue;
    
        nU+= (cU + cP);
    
        nP+= (cU + cP)*(epsilon + nM_plus-nM);
        r+= nM_plus -cM;
      }
  // ********************************************************
// nP et nU à la "maille fantôme" gauche
// ********************************************************
  nU+=((U_condlimi(coord+δx*0.5,n_time) -P_condlimi(coord+δx*0.5,n_time)));
  nU*=epsilon/r;
  nP+= (-U_condlimi(coord+δx*0.5,n_time)  + P_condlimi(coord+δx*0.5,n_time))*(epsilon +nM-nM_moins);
  nP*=1/r;

  //info()<<"nP="<<nP<<"coord="<<coord;
   
  
  n_time+=δt;
}




