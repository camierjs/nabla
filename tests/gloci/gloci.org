#+title: ∇-Glace sans @
#+author: Camier Jean-Sylvain
#+email: Jean-Sylvain.Camier@cea.fr
#+date:
#+LANGUAGE: en
#+OPTIONS: H:1 num:nil toc:nil todo:nil pri:nil tags:nil date:t
#+OPTIONS: author:t timestamp:nil
#+OPTIONS:\n:nil ^:t <:t *:t |:t
#+STARTUP: latex indent nolatexpreview
#+LaTeX_CLASS: article
#+LaTeX_HEADER: \usepackage{hyperref}

* glociStep2
#+begin_src nabla
// *************************************************************
// * ∇-Glace: Temps logique ⇒ Temps discret
// * Jean-Sylvain.Camier@cea.fr - 01.69.26.55.68
// *************************************************************

// *************************************************************
// * Déclarations des options
// *************************************************************
ℝ γ = 1.4;
ℝ option_x_min = 0.0;
ℝ option_x_interface = 0.5;
ℝ option_x_max = 1.0;
ℝ option_δt_ini = 1e-5;
ℝ option_δt_cfl = 0.15;
ℝ option_ini_zg_ρ = 1.0;
ℝ option_ini_zd_ρ = 0.125;
ℝ option_ini_zg_p = 1.0; 
ℝ option_ini_zd_p = 0.1;

// *************************************************************
// * Déclarations des variables
// *************************************************************
ℝ t,δt;    // Temps et pas de temps
ℝ³ Χ⁰,Χ;   // Positions noeuds et mailles à t=0 et tⁿ
ℝ³ u,b;    // Vitesses & Second membre

ℝ c,m,e,E; // Masse & Energies
ℝ p⁰,ρ⁰,V⁰
ℝ p,ρ,V;   // Pression, Densités, Volume
  
ℝ³ *C,*F;  // Résultantes aux sommets
ℝ³⨯ℝ³ *A;  // Matrices de contributions aux sommets

// *************************************************************
// * Conditions initiales: Χ⁰(par le mailleur), ρ⁰, p⁰, V⁰ & m
// *************************************************************
∀ j∈cells Χⱼ = ¼*∑ᵣΧ⁰ᵣ;
∀ cells {
  if (Χ.x < option_x_interface)){
    ρ⁰=option_ini_zg_ρ;
    p⁰=option_ini_zg_p;
  }else{
    ρ⁰=option_ini_zd_ρ;
    p⁰=option_ini_zd_p;
  }
}
∀ j∈cells V⁰ⱼ = ½*∑ᵣCⱼᵣ⋅Χ⁰ᵣ;
∀ cells m = ρ⁰*V⁰;

// *************************************************************
// * Calcul des Cⱼᵣ et des variables qui en découlant
// *************************************************************
ℝ³ ⟂(ℝ³ s0, ℝ³ s1){return ℝ³(s1.y-s0.y,-s1.x+s0.x,0);}
∀ j∈cells, ∀ r∈nodes(j) C_{jr}=½*⟂(Χ_{(j-1)%4},Χ_{(j+1)%4});
∀ j∈cells Vⱼ = ½*∑ᵣCⱼᵣ⋅Χᵣ;
∀ j∈cells glace_δtⱼ = 2.0*Vⱼ/(cⱼ*Σᵣ‖Cⱼᵣ‖);

// *************************************************************
// * Règles EOS des 'invariants'
// *************************************************************
∀ cells c = √(γ*p/ρ);
∀ cells p = (γ-1.0)*ρ*e;
∀ cells ρ = m/V;
∀ cells e = E-½*(u⋅u);

// *************************************************************
// * Initialisation de la boucle en 'n'
// *************************************************************
tⁿ⁼⁰ = 0;
δtⁿ⁼⁰ = option_δt_ini;
∀ nodes Χⁿ⁼⁰ = Χ⁰;
∀ cells uⁿ⁼⁰ = 0;
∀ cells Eⁿ⁼⁰ = p⁰/((γ-1.0)*ρ⁰);

// *************************************************************
// * Cell-centered Godunov Scheme for Lagrangian gas dynamics
// *************************************************************
∀ j∈cells, ∀ r∈nodes(j) Aⱼᵣ = ρⱼ*cⱼ*Cⱼᵣ⊗Cⱼᵣ/‖Cⱼᵣ‖;
∀ r∈nodes Aᵣ = ∑ⱼAⱼᵣ;
∀ r∈nodes bᵣ = ∑ⱼ(Aⱼᵣuⱼ+Cⱼᵣpⱼ);
∀ r∈nodes uᵣ = b̌ᵣ/Ǎᵣ;
∀ j∈cells, ∀ r∈nodes(j), Fⱼᵣ = pⱼ*Cⱼᵣ+Aⱼᵣ*(uᵣ-uⱼ);

// *************************************************************
// * Itérations de la boucle en 'n'
// * Et calcule du δt pour mise-à-jour du temps de la simulation
// *************************************************************
∀ n∈ℕ, ∀ j∈cells Eⱼⁿ⁺¹ = Eⱼⁿ + δtⁿ/mⱼⁿ*ΣᵣFⱼᵣⁿ;
∀ n∈ℕ, ∀ j∈cells uⱼⁿ⁺¹ = uⱼⁿ + δtⁿ/mⱼⁿ*ΣᵣFⱼᵣⁿ⋅uᵣⁿ;
∀ n∈ℕ, ∀ r∈nodes Χᵣⁿ⁺¹ = Χᵣⁿ + δtⁿ*uᵣⁿ;
∀ n∈ℕ, δtⁿ⁺¹ = option_δt_cfl*minⱼ(glace_δtⱼ);
∀ n∈ℕ, tⁿ⁺¹ = tⁿ + δtⁿ⁺¹;

// *************************************************************
// * Conditions aux bords
// *************************************************************
∀ k∈outer faces, ∀ r∈nodes(k) {
  b̃ᵣ = (I-nₖ⊗nₖ)*bᵣ;
  Ãᵣ = (I-nₖ⊗nₖ)*Aᵣ*(I-nₖ⊗nₖ)+tr(Aᵣ)*(I-nₖ⊗nₖ);
  if (!((Χᵣ.x==option_x_min)||(Χᵣ.x==option_x_max))) continue;
  Ǎᵣ=I;
  b̌ᵣ=option_u_ini;
}
#+end_src


