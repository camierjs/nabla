NABLA = ${NABLA_BINARY_DIR}/nabla/nabla
TGT_FILE = ${NABLA_SOURCE_DIR}/tests/$(TGT)/$(TGT).n
TGT_FILE += $(ADDITIONAL_NABLA_FILES:%=${NABLA_SOURCE_DIR}/tests/$(TGT)/%)

SIMD ?= std
PARALLEL ?= seq

BYFL_FLAGS  = #-bf-verbose #-bf-every-bb -bf-vectors -bf-inst-mix -bf-data-structs -bf-by-func -bf-call-stack

AVX_EXTRA_FLAGS = -mCG_use_zeroupper=0 -mP1OPT_max_rec_copy_size=128
SIMD_std_FLAGS  = $(BYFL_FLAGS) -std=c++11 -g -O2 -Wall -DNO_SSE2 -mno-avx  #-fPIC

LOG ?= -tnl #-v $(TGT).log

PARALLEL_omp_FLAGS = -fopenmp
PARALLEL_cilk_FLAGS = #-fcilkplus

CXX = ${CMAKE_CXX_COMPILER}
#CXX=/usr/local/bin/bf-clang++
#CXX = mpc_g++
CFLAGS = $(PARALLEL_$(PARALLEL)_FLAGS) $(SIMD_std_FLAGS) -finline
#LIB_GOMP = $(shell $(CXX) -print-file-name=libgomp.a)
LIB_ALEPH = ${NABLA_BINARY_DIR}/aleph/libAleph.a ${NABLA_BINARY_DIR}/aleph/hypre/libAlephHYPRE.a
# A mettre lors du configure
LIB_HYPRE = ${HYPRE_LIB} #-Wl,-rpath,/usr/local/hypre/lib 
LIB_MPI = /usr/lib/libmpi.so /usr/lib/libmpi_cxx.so #/usr/lib/openmpi/lib/libmpi_cxx.so -Wl,-rpath,/usr/lib/openmpi/lib
LIB_ORGOPT = ${NABLA_BINARY_DIR}/orgopt/libNablaOrgOpt.a
LIB_GLVIS = ${NABLA_BINARY_DIR}/glvis/libNablaGLVis.a ${MFEM_ROOT_PATH}/libmfem.a


all:$(TGT) $(NABLA) 

$(TGT).cc: $(TGT_FILE) $(NABLA)
	$(NABLA) $(LOG) --lambda $(TGT) --std --$(PARALLEL) -i $(TGT_FILE)

$(TGT).o:$(TGT).cc $(TGT_FILE)
	$(CXX) $(ADDITIONAL_DEFINES) -c $(CFLAGS) $(TGT).cc -o $(TGT).o

$(TGT):$(TGT).o $(TGT_FILE)
	$(CXX) $(SIMD_std_FLAGS) -o $(TGT)_$(MESH)_$(PARALLEL) $(TGT).o $(LIB_GOMP) $(LIB_ALEPH) $(LIB_HYPRE) $(LIB_MPI) $(LIB_ORGOPT) $(LIB_GLVIS)

cln:
	-rm -f *.o $(TGT).cc $(TGT).h $(TGT)

gen1:$(TGT).cc
#	$(CXX) -S -c $(CFLAGS) $(TGT).cc -o $(TGT).S
run1:$(TGT) $(NABLA) 
	OMP_NUM_THREADS=1 CILK_NWORKERS=1 ./$(TGT)_$(MESH)_$(PARALLEL)
#	${MPIEXEC} -n 1 ./$(TGT)_$(MESH)_$(PARALLEL)
#	./$(TGT)_$(MESH)_$(PARALLEL)
run4:$(TGT) $(NABLA) 
	OMP_NUM_THREADS=4 CILK_NWORKERS=4 ./$(TGT)_$(MESH)_$(PARALLEL)
#	./$(TGT)_$(MESH)_$(PARALLEL)

#############
# DOT 2 PNG #
#############
svg:
	dot -O -Tsvg $(TGT).time.dot
