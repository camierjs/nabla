///////////////////////////////////////////////////////////////////////////////
// NABLA - a Numerical Analysis Based LAnguage                               //
//                                                                           //
// Copyright (C) 2014~2015 CEA/DAM/DIF                                       //
// IDDN.FR.001.520002.000.S.P.2014.000.10500                                 //
//                                                                           //
// Contributor(s): CAMIER Jean-Sylvain - Jean-Sylvain.Camier@cea.fr          //
//                                                                           //
// This software is a computer program whose purpose is to translate         //
// numerical-analysis specific sources and to generate optimized code        //
// for different targets and architectures.                                  //
//                                                                           //
// This software is governed by the CeCILL license under French law and      //
// abiding by the rules of distribution of free software. You can  use,      //
// modify and/or redistribute the software under the terms of the CeCILL     //
// license as circulated by CEA, CNRS and INRIA at the following URL:        //
// "http://www.cecill.info".                                                 //
//                                                                           //
// The CeCILL is a free software license, explicitly compatible with         //
// the GNU GPL.                                                              //
//                                                                           //
// As a counterpart to the access to the source code and rights to copy,     //
// modify and redistribute granted by the license, users are provided only   //
// with a limited warranty and the software's author, the holder of the      //
// economic rights, and the successive licensors have only limited liability.//
//                                                                           //
// In this respect, the user's attention is drawn to the risks associated    //
// with loading, using, modifying and/or developing or reproducing the       //
// software by the user in light of its specific status of free software,    //
// that may mean that it is complicated to manipulate, and that also         //
// therefore means that it is reserved for developers and experienced        //
// professionals having in-depth computer knowledge. Users are therefore     //
// encouraged to load and test the software's suitability as regards their   //
// requirements in conditions enabling the security of their systems and/or  //
// data to be ensured and, more generally, to use and operate it in the      //
// same conditions as regards security.                                      //
//                                                                           //
// The fact that you are presently reading this means that you have had      //
// knowledge of the CeCILL license and that you accept its terms.            //
//                                                                           //
// See the LICENSE file for details.                                         //
///////////////////////////////////////////////////////////////////////////////
#include <assert.h>
with ‚Ñµ;
//with slurm;


// ****************************************************************************
// * D√©claration des options
// ****************************************************************************
options{
  ‚Ñù option_Œ¥t_ini               = 1.0;
  Bool option_indirect          = true;
      
  // Option si l'on souhaite utiliser les valeures aux faces
  // ou une moyenne des noeuds
  Bool option_trial             = false;
  Bool option_trial_average     = false;

  // Options de debug
  Bool option_debug_primal      = false;
  Bool option_debug_dual        = false;
  Bool option_debug_trial       = false;
  Bool option_debug_dual_aleph  = false;
  Bool option_debug_trial_aleph = false;

  // Options pour les maillages
  Bool option_quads             = true;
  Bool option_triangles         = false;

  Bool option_dag               = false;
  
  Bool option_sncq              = false;
  Real option_sncq_Œ∏            = 0.25;
  
  Bool option_rdq               = false;
  Real option_rdq_Œ±             = 0.3;
   
  // Options pour les solutions
  Bool option_hole              = false;
  Bool option_atan              = false;
  Bool option_isotropic         = false;
  Bool option_gao_wu            = true;
  
  // Valeures √† l'initialisation
  Real option_k                 = 1.0;
  Real option_Œ∏                 = 0.0;
  Bool option_spin_Œ∏            = false;
  Real option_spin_Œ∏_x          = 2.0;
  Real option_spin_Œ∏_y          = 2.0;  
  Real option_ini_temperature   = 0.0;
  Real option_ùúïŒ©_temperature    = 0.0;
  
  // Crit√®res de sortie
  Integer option_max_iterations = 8;
  Bool option_only_one_iteration= false;
  Bool option_quit_when_finish  = true;
   
  // It√©rations de Picard
  Real option_picard_Œµ          = 1.0e-10;
  
  // Options d'Aleph
  Real alephEpsilon             = 1.e-10;
  Integer alephUnderlyingSolver = 0;
  Integer alephMaxIterations    = 16384;
  Integer alephPreconditionerMethod = 0;
  // DIAGONAL=0, AINV=1, AMG=2, IC=3, POLY=4, ILU=5, ILUp=6,
  // SPAIstat=7, SPAIdyn=8, DDMCriteriaAdaptedSelector=9, NONE=10
  Integer alephSolverMethod     = 6;
  // PCG=0, BiCGStab=1, BiCGStab2=2, GMRES=3, SAMG=4, QMR=5, SuperLU=6
  Integer alephNumberOfCores    = 0;
  Bool option_aleph_dump_matrix = true;
  
  // Options de debug
  Bool option_debug_geometry    = false;
  Bool option_debug_solutions   = false;
  Bool option_debug_tpfa_sums   = false;
  Bool option_debug_aleph_rhs   = false;
  Bool option_debug_aleph_sol   = false;
  Bool option_debug_errors      = false;

  // SLURM options
  Integer option_slurm_tremain  = 300; 
};

// ****************************************************************************
// * D√©claration des variables aux mailles
// ****************************************************************************
cells{
  Real cell_Œ∏;                  // Temp√©ratures aux mailles
  Real cell_Œ∏_1m0;
  Real cell_Œ∏_diff;
  Real cell_Œ∏_kp1mk;
  Real cell_area;               // Aires
  Real cell_sd_id;
  Real3 cell_mass_center;       // Centre de masse
  Real cell_exact_solution;
};

// ****************************************************************************
// * D√©claration des variables aux noeuds
// ****************************************************************************
nodes{
  Real node_Œ∏;                   // Temperatures aux noeuds
  Real node_Œ∏_diff;
  Real node_Œ∏_1m0;
  Real node_Œ∏_kp1mk;
  Real node_area;                // Aires
  Real node_f_area;              // Aires pond√©r√©es par les f
  Real node_sd_id;
  Bool node_is_on_ùúïŒ©;
  Real node_exact_solution;
  Integer node_unique_id;
};

// ****************************************************************************
// * D√©claration des variables aux faces
// ****************************************************************************
faces{
  Real face_Œ∏;                  // Temp√©ratures aux faces
  Real face_Œ∏_diff;
  Real face_Œ∏_1m0;
  Real face_Œ∏_kp1mk;
  //Real face_area;                // Aires
  Real face_sd_id;
  Bool face_is_on_ùúïŒ©;
  Real face_exact_solution;
  Integer face_unique_id;
  Real3x3 Œ∫; // Coefficient de diffusion
  
  // Primal aux bords
  Real boundary_primal_c_sp;
  Real boundary_primal_d_sp;
  // Primal standard
  Real interior_primal_c_sp;
  Real interior_primal_c_sq;
  
  // Dual Direct standard
  Real interior_dual_c_sd;
  Real interior_dual_c_se;
  // Dual Direct E-LM
  Bool interior_dual_c_lm;
  Real interior_dual_c_sl;
  Real interior_dual_c_sm;
  //  Dual Direct D-JK
  Bool interior_dual_c_jk;
  Real interior_dual_c_sj;
  Real interior_dual_c_sk;
  //  Dual Direct pour les cas E-LM et D-JK
  Uid interior_dual_face_uid;
  Bool interior_dual_face_swap;
  
  // Dual Indirect Q
  Real interior_dual_c_sd_q;
  Real interior_dual_c_se_q;
  Bool interior_dual_c_lm_q;
  Real interior_dual_c_sl_q;
  Real interior_dual_c_sm_q;
  Bool interior_dual_c_jk_q;
  Real interior_dual_c_sj_q;
  Real interior_dual_c_sk_q;
  Uid interior_dual_face_uid_q;
  Bool interior_dual_face_swap_q;

  // Dual Indirect P
  Real interior_dual_c_sd_p;
  Real interior_dual_c_se_p;
  Bool interior_dual_c_lm_p;
  Real interior_dual_c_sl_p;
  Real interior_dual_c_sm_p;
  Bool interior_dual_c_jk_p;
  Real interior_dual_c_sj_p;
  Real interior_dual_c_sk_p;
  Uid interior_dual_face_uid_p;
  Bool interior_dual_face_swap_p;
  
  // Trial Generic
  Bool interior_trial_head[4];
  Bool interior_trial_tail[4];
  Real interior_trial_s[4];
  Real interior_trial_q[4];
  Real interior_trial_e[4];
};

// ****************************************************************************
// * D√©claration des variables globales
// ****************************************************************************
global{
  Real eh2;                // Relative error
  Real Œîl;                 // Length of the sides, before touching mesh
  Bool full_quads;
  Bool full_triangles;
  Integer globalNbCells;
  Integer globalNbNodes;
};

