///////////////////////////////////////////////////////////////////////////////
// NABLA - a Numerical Analysis Based LAnguage                               //
//                                                                           //
// Copyright (C) 2014~2016 CEA/DAM/DIF                                       //
// IDDN.FR.001.520002.000.S.P.2014.000.10500                                 //
//                                                                           //
// Contributor(s): CAMIER Jean-Sylvain - Jean-Sylvain.Camier@cea.fr          //
//                                                                           //
// This software is a computer program whose purpose is to translate         //
// numerical-analysis specific sources and to generate optimized code        //
// for different targets and architectures.                                  //
//                                                                           //
// This software is governed by the CeCILL license under French law and      //
// abiding by the rules of distribution of free software. You can  use,      //
// modify and/or redistribute the software under the terms of the CeCILL     //
// license as circulated by CEA, CNRS and INRIA at the following URL:        //
// "http://www.cecill.info".                                                 //
//                                                                           //
// The CeCILL is a free software license, explicitly compatible with         //
// the GNU GPL.                                                              //
//                                                                           //
// As a counterpart to the access to the source code and rights to copy,     //
// modify and redistribute granted by the license, users are provided only   //
// with a limited warranty and the software's author, the holder of the      //
// economic rights, and the successive licensors have only limited liability.//
//                                                                           //
// In this respect, the user's attention is drawn to the risks associated    //
// with loading, using, modifying and/or developing or reproducing the       //
// software by the user in light of its specific status of free software,    //
// that may mean that it is complicated to manipulate, and that also         //
// therefore means that it is reserved for developers and experienced        //
// professionals having in-depth computer knowledge. Users are therefore     //
// encouraged to load and test the software's suitability as regards their   //
// requirements in conditions enabling the security of their systems and/or  //
// data to be ensured and, more generally, to use and operate it in the      //
// same conditions as regards security.                                      //
//                                                                           //
// The fact that you are presently reading this means that you have had      //
// knowledge of the CeCILL license and that you accept its terms.            //
//                                                                           //
// See the LICENSE file for details.                                         //
///////////////////////////////////////////////////////////////////////////////
// This NABLA port is an implementation of the NDSPMHD software

void writeHeaderAfterOptions(void) @ -121.0 {
  info()<<"[1;33m[writeHeaderAfterOptions][m";
  info()<< "                _                     _         _ ";
  info()<< "      _ __   __| |___ _ __  _ __ ___ | |__   __| |";
  info()<< "     | '_ \\ / _` / __| '_ \\| '_ ` _ \\| '_ \\ / _` |";
  info()<< "     | | | | (_| \\__ \\ |_) | | | | | | | | | (_| |";
  info()<< "     |_| |_|\\__,_|___/ .__/|_| |_| |_|_| |_|\\__,_|";
  info()<< "                     |_|                          ";
  info()<< "   _   _     _   _   _   _   _   _     _   _   _   _   _   ";
  info()<< "  / \\ / \\   / \\ / \\ / \\ / \\ / \\ / \\   / \\ / \\ / \\ / \\ / \\  ";
  info()<< " ( B | y ) ( D | a | n | i | e | l ) ( P | r | i | c | e ) ";
  info()<< "  \\_/ \\_/   \\_/ \\_/ \\_/ \\_/ \\_/ \\_/   \\_/ \\_/ \\_/ \\_/ \\_/  ";
  info()<< " ( Version: "<<NDSPMHD_VERSION<<" Copyright (c) 2003-2014 )";
  info()<< " * NDSPMHD comes with ABSOLUTELY NO WARRANTY.";
  info()<< "   This is free software; and you are welcome to redistribute it ";
  info()<< "   under certain conditions (see LICENSE file for details). *";
  info()<< " Bug reports to: daniel.price@monash.edu or dprice@cantab.net ";
  info()<< " Check for updates at: http://users.monash.edu.au/~dprice/ndspmhd ";
  info()<< " Please cite Price (2012), J. Comp. Phys. 231, 759 if you ";
  info()<< " use NDSPMHD for scientific work and please send me a copy of any  ";
  info()<< " such publications upon submission to the journal/proceedings.";
}

void writeOptions(void) @ -120.0{
  info()<<"\tMaximum time ="<< option_tmax<<" or "<< option_nmax <<" timesteps";
  info()<<"\tOutput every t = "<< option_tout<<" or "<< option_nout<<" timesteps";
  info()<<" ";
  info()<<"\tNumber of spatial dimensions = "<< option_ndim
        <<", velocity varies in "<<option_ndimV<<" dimensions.";
  info()<<" ";
  info()<<"\tOptions:";
  info()<<"\t\tEnergy equation  : "<<option_iener<<"\t\tContinuity Equation  :"<<option_icty;
  info()<<"\t\tPressure term    : "<<option_iprterm<<"\t\tArtificial viscosity :"<<option_iav;
  info()<<"\t\tMagnetic fields  : "<<option_imhd<<"\t\tExternal forces      :"<<option_iexternal_force;
  info()<<" ";
  if (option_igravity==0) info()<<"Self gravity is OFF";
  if (option_igravity!=0) info()<<"Self gravity is ON";

  info()<<"Artificial dissipative terms:";
  info()<<"\t\talpha (min) = "<<option_alphamin<<", "<<option_alphaumin<<", "<<option_alphaBmin<<" beta = "<<option_beta;
  info()<<"\t\tviscosity limiter   : "<<option_iavlimx;
  info()<<"\t\tconduction limiter  : "<<option_iavlimy;
  info()<<"\t\tresistivity limiter : "<<option_iavlimz;
  info()<<"\t\tdecay constant = "<<option_avdecayconst<<", av source term x"<<global_avfact;
  info()<<" ";
  info()<<"Equation of state: gamma = "<<option_gamma;
  info()<<" ";
  info()<<"Timestepping conditions: C_cour = "<< option_C_cour<<", C_force = "<<option_C_force;
}

/*
// print out diagnostics of run
particles void writeHeaderRunDiagnostics_MinMaxAvg_h(void) @ -120.0{
  //hh
}


particles void writeHeaderRunDiagnostics_MinMaxAvg_dens(void) @ -119.0{
  //dens
}

particles void writeHeaderRunDiagnostics_MinMaxAvg_u(void) @ -118.0{
  //u
}

// mach number
// B
// plasma beta

*/


void secondHeaderAfterParticlesHaveBeenSetup(void) @ -89{
  Real fNneigh;
  info()<<"[1;33m[initialise_05] secondHeaderAfterParticlesHaveBeenSetup[m";
  info()<<"\tNumber of particles = "<<global_npart;
  if (global_ibound==0) info()<<"\tboundaries: None";
  if (global_ibound==1) info()<<"\tboundaries: Fixed particles";
  if (global_ibound==2) info()<<"\tboundaries: Reflective ghosts";
  if (global_ibound==3) info()<<"\tboundaries: Periodic (ghosts)";
  if (global_ibound==5) info()<<"\tboundaries: Shearing box (ghosts)";

  if (option_ndim==1) fNneigh = 2.*global_radkern*option_hfact;
  if (option_ndim==2) fNneigh = CONST_PI*pow(global_radkern*option_hfact,2);
  if (option_ndim==3) fNneigh = 4./3.*CONST_PI*pow(global_radkern*option_hfact,3);
  
  info()<<"\tNumber of fixed particles = "<<global_nbpts;
  info()<<"\tKernel radius = "<<global_radkern;
  info()<<"\tVariable smoothing length: ";
  info()<<"\t\th varied using method : "<<option_ihvar<<" Kernel averaging :"<<option_ikernav;
  info()<<"\t\th = "<<option_hfact<<"*[m/(rho + "<<global_rhomin<<")]^(1/"<<option_ndim<<"); htol = "<<option_tolh;
  info()<<"\t\tNumber of neighbours = "<<fNneigh;

  // print out diagnostics of run
  info()<<"";
  info()<<"\t\t[1;31mminmaxave h[m";
  info()<<"\t\t[1;31mminmaxave dens[m";
  info()<<"\t\t[1;31mminmaxave u[m";
  info()<<"\t\t[1;31mminmaxave v[m";
  info()<<"\t\t[1;31mminmaxave Mach[m";
}


