options{
  Real wtf = -1.0e-15;
  Bool option_a = true;
};

cells{
  Real α;
  Real αs[4];
  Real theta[nodes];
};

global{
  Int64 mc_vars_seed_cur;
  Int64 array[4];
};


cells Real inverse(Real ε) in (cell α){
  ε=(ε!=0.0)?1.0/α:ε;
  return ε;
}


/*cells Real calcHydroConstraintForElems(Real dthydro) in (cell vdov){
  const Real denom = 1.e-20+rabs(vdov);
  const Real dtdvov = option_dvovmax / denom;
  const Real dthdr = min(dthydro,dtdvov);
  dthydro=(vdov!=0.0)?dthdr;
  return dthydro;
  }*/

/*
void powOfTwo(void){
  const Real α = 1.0;
  const Real β = α²;
  const Real γ = β³;
  const Real ε = 0;
  ε?=1.0;
  ε<?=1.0;
}
*/
