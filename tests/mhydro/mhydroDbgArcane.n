///////////////////////////////////////////////////////////////////////////////
// NABLA - a Numerical Analysis Based LAnguage                               //
//                                                                           //
// Copyright (C) 2014~2017 CEA/DAM/DIF                                       //
// IDDN.FR.001.520002.000.S.P.2014.000.10500                                 //
//                                                                           //
// Contributor(s): CAMIER Jean-Sylvain - Jean-Sylvain.Camier@cea.fr          //
//                                                                           //
// This software is a computer program whose purpose is to translate         //
// numerical-analysis specific sources and to generate optimized code        //
// for different targets and architectures.                                  //
//                                                                           //
// This software is governed by the CeCILL license under French law and      //
// abiding by the rules of distribution of free software. You can  use,      //
// modify and/or redistribute the software under the terms of the CeCILL     //
// license as circulated by CEA, CNRS and INRIA at the following URL:        //
// "http://www.cecill.info".                                                 //
//                                                                           //
// The CeCILL is a free software license, explicitly compatible with         //
// the GNU GPL.                                                              //
//                                                                           //
// As a counterpart to the access to the source code and rights to copy,     //
// modify and redistribute granted by the license, users are provided only   //
// with a limited warranty and the software's author, the holder of the      //
// economic rights, and the successive licensors have only limited liability.//
//                                                                           //
// In this respect, the user's attention is drawn to the risks associated    //
// with loading, using, modifying and/or developing or reproducing the       //
// software by the user in light of its specific status of free software,    //
// that may mean that it is complicated to manipulate, and that also         //
// therefore means that it is reserved for developers and experienced        //
// professionals having in-depth computer knowledge. Users are therefore     //
// encouraged to load and test the software's suitability as regards their   //
// requirements in conditions enabling the security of their systems and/or  //
// data to be ensured and, more generally, to use and operate it in the      //
// same conditions as regards security.                                      //
//                                                                           //
// The fact that you are presently reading this means that you have had      //
// knowledge of the CeCILL license and that you accept its terms.            //
//                                                                           //
// See the LICENSE file for details.                                         //
///////////////////////////////////////////////////////////////////////////////
/*cells void dbgCellsXCenter(void)  @ -5.9{
  debug()<<"xCenter="<<xCenter;
}

cells void dbgCellsDensity(void)  @ -4.9{
  debug()<<"density="<<ρ;
}

cells void dbgCellsPressure(void)  @ -4.8{
  debug()<<"pressure="<<pressure;
}

cells void dbgCellsAdiabaticCst(void)  @ -4.7{
  debug()<<"adiabatic_cst="<<adiabatic_cst;
}

nodes void dbgNodeMass(void)  @ -0.8{
  debug()<<"dbgNodeMass:"<<nMass;
}


// ****************************************************************************
// * Partie de calcul ]+0,+∞[ 
// ****************************************************************************


nodes void dbgForce(void) @ 0.2{
  debug()<<"dbgForce force"<<force;
}

nodes void dbgComputeVelocity(void)@1.1{
  debug()<<"velocity:"<<velocity;
}

nodes void dbgBoundaryCondition(void)@2.1{
  debug()<<"post BC velocity:"<<velocity;
}

nodes void dbgMoveNodes(void)  @ 3.1{
  debug()<<"dbgMoveNodes:"<<coord;
}

cells void dbgGeometricVolume(void) @ 5.1{
  debug()<<"dbgGeometricVolume v"<<v;
}
cells void dbgDensity(void) @ 6.1{
  debug()<<"dbgDensity rho"<<ρ;
}

cells void dbgEOSpressure(void) @ 8.1{
  debug()<<"dbgEOSpressure pressure"<<pressure;
}
cells void dbgEOSsound(void) @ 8.2{
  debug()<<"dbgEOSsound sound"<<σSound;
}

cells void dbgApplyEOS(void) @ 8.1{
  debug()<<"pressure #"<<uid<<"="<<pressure;
}
*/
