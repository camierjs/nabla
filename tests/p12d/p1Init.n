///////////////////////////////////////////////////////////////////////////////
// NABLA - a Numerical Analysis Based LAnguage                               //
//                                                                           //
// Copyright (C) 2014~2016 CEA/DAM/DIF                                       //
// IDDN.FR.001.520002.000.S.P.2014.000.10500                                 //
//                                                                           //
// Contributor(s): CAMIER Jean-Sylvain - Jean-Sylvain.Camier@cea.fr          //
//                 LABOURASSE Emmanuel - Emmanuel.Labourasse@cea.fr          //
//                                                                           //
// This software is a computer program whose purpose is to translate         //
// numerical-analysis specific sources and to generate optimized code        //
// for different targets and architectures.                                  //
//                                                                           //
// This software is governed by the CeCILL license under French law and      //
// abiding by the rules of distribution of free software. You can  use,      //
// modify and/or redistribute the software under the terms of the CeCILL     //
// license as circulated by CEA, CNRS and INRIA at the following URL:        //
// "http://www.cecill.info".                                                 //
//                                                                           //
// The CeCILL is a free software license, explicitly compatible with         //
// the GNU GPL.                                                              //
//                                                                           //
// As a counterpart to the access to the source code and rights to copy,     //
// modify and redistribute granted by the license, users are provided only   //
// with a limited warranty and the software's author, the holder of the      //
// economic rights, and the successive licensors have only limited liability.//
//                                                                           //
// In this respect, the user's attention is drawn to the risks associated    //
// with loading, using, modifying and/or developing or reproducing the       //
// software by the user in light of its specific status of free software,    //
// that may mean that it is complicated to manipulate, and that also         //
// therefore means that it is reserved for developers and experienced        //
// professionals having in-depth computer knowledge. Users are therefore     //
// encouraged to load and test the software's suitability as regards their   //
// requirements in conditions enabling the security of their systems and/or  //
// data to be ensured and, more generally, to use and operate it in the      //
// same conditions as regards security.                                      //
//                                                                           //
// The fact that you are presently reading this means that you have had      //
// knowledge of the CeCILL license and that you accept its terms.            //
//                                                                           //
// See the LICENSE file for details.                                         //
///////////////////////////////////////////////////////////////////////////////

// ****************************************************************************
// * Partie d'initialisation ]-âˆž,-0.0]
// ****************************************************************************

// ****************************************************************************
// * hydroInit
// ****************************************************************************
iniDt @ -30.0 { Î´t=option_Î´t_initial; }

// ****************************************************************************
// * iniCellZone - option_case 0
// ****************************************************************************
âˆ€ cells iniCase0 @ -28.0 if (option_case==0){
  // On regarde si le centre de la maille est Ã  G ou D de la frontiÃ¨re
  if ((option_test_sod && (center.x < option_x_interface))
      // Ou suivant une autre rÃ¨gle gÃ©omÃ©trique arbitraire
      ||(!option_test_sod && (âˆš(centerâ‹…center) < option_x_interface))){
    u.x=0.;
    u.y=0.;
    p=option_ini_zg_p;
    Î¸=option_ini_zg_p;
  }else{
    u.x=0.;
    u.y=0.;
    p=option_ini_zd_p;
    Î¸=option_ini_zd_p;
  }
  Ïƒ_a=0.;
  Ïƒ_s=1.;
  Ïƒ=Ïƒ_a+Ïƒ_s;
  Îµ = 1.;
  if (DEBUG)
    printf("\n[35m[eos,ini] Î¸=%f, p_ic=%f, ux_ic=%f, uy_ic=%f[0m",
           Î¸,p,u.x,u.y);
 }

// ****************************************************************************
// * iniCellZone - option_case 1
// ****************************************************************************
âˆ€ cells iniCase1 @ -28.0 if (option_case==1){
  u=0.;
  p=0.;
  Î¸=0.;
  Ïƒ_a=1.;
  Ïƒ_s=0.;
  Ïƒ=Ïƒ_a+Ïƒ_s;
  Îµ = 1.;
  if (DEBUG)
    printf("\n[35m[eos,ini] Î¸=%f, p_ic=%f, ux_ic=%f, uy_ic=%f[0m",
           Î¸,p,u.x,u.y);
}

// ****************************************************************************
// * iniCellZone - option_case 2
// ****************************************************************************
âˆ€ cells iniCase2 @ -28.0 if (option_case==2){
  u=0.;
  p=0.;
  Î¸=1.;
  if (DEBUG)
    printf("\n[35m[eos,ini] Î¸=%f, p_ic=%f, ux_ic=%f, uy_ic=%f[0m",
           Î¸,p,u.x,u.y);
  Ïƒ_a=1.;
  Ïƒ_s=0.;
  Ïƒ=Ïƒ_a+Ïƒ_s;
  Îµ = 1.;
}

// ****************************************************************************
// * iniCellZone - option_case 3
// ****************************************************************************
âˆ€ cells iniCase3 @ -28.0 if (option_case==3){
  u=0.;
  p=0.;
  Î¸=1.;
  if (DEBUG)
    printf("\n[35m[eos,ini] Î¸=%f, p_ic=%f, ux_ic=%f, uy_ic=%f[0m",
           Î¸,p,u.x,u.y);
  Ïƒ_a=0.5;
  Ïƒ_s=19./12.;
  Ïƒ=Ïƒ_a+Ïƒ_s;
  Îµ = 1.;
}


// ****************************************************************************
// * initExact0 - option_ini_exact
// ****************************************************************************
âˆ€ cells iniExactIfOption @ -19.1 if (option_ini_exact){
  p=_exact_p_sol(time,center);
  u=_exact_u_sol(time,center);
  Î¸=_exact_t_sol(time,center);
  if (DEBUG) 
    printf("\n[initExact0] Impose la solution exacte Ã  l'init\
 (time=%f) u[%d].x=%f",time,uid,u.x);
}

âˆ€ outer cells iniExactOuter @ -19.0 {
  p=_exact_p_sol(time,center);
  u=_exact_u_sol(time,center);
  Î¸=_exact_t_sol(time,center);
  if (DEBUG)
    printf("\n[initExact] Impose les conditions aux bords\
 (time=%f) u[%d].x=%f",time,uid,u.x);
}

// ****************************************************************************
// * geomComputeCQsQuad @ -20.0
// * geomComputeSurfaceAndVolume @ -20.0 
// ****************************************************************************
