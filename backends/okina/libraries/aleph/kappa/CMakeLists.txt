info("${VT100_FG_CYAN}ALEPH_${VT100_BOLD}KAPPA${VT100_RESET} subdirectory")
SET(LIBRARY_OUTPUT_PATH ${CMAKE_BINARY_DIR}/lib)

INCLUDE_DIRECTORIES(${ARCANE_CEA_SOURCE_PATH}/src)
INCLUDE_DIRECTORIES(${ARCANE_SRC_PATH})
INCLUDE_DIRECTORIES(${CMAKE_BINARY_DIR})
INCLUDE_DIRECTORIES(${ARCANEBUILDROOT})

ARCANE_INCLUDE_CONFIG(${ARCANE_CEA_SOURCE_PATH}/src ALEPH_KAPPA aleph/kappa)

ADD_DEFINITIONS(-DARCANE_COMPONENT_arcane_aleph_kappa)

IF(SLOOP_FOUND)
   INCLUDE_DIRECTORIES(${SLOOP_INCLUDE_DIRS})
ENDIF(SLOOP_FOUND)
IF(HYPRE_FOUND)
   INCLUDE_DIRECTORIES(${HYPRE_INCLUDE_DIRS})
ENDIF(HYPRE_FOUND)
IF(TRILINOS_FOUND)
   INCLUDE_DIRECTORIES(${TRILINOS_INCLUDE_DIRS})
ENDIF(TRILINOS_FOUND)
IF(MPI_FOUND)
  INCLUDE_DIRECTORIES(${MPI_INCLUDE_DIRS})
ENDIF(MPI_FOUND)
IF(CUDA_FOUND)
   INCLUDE_DIRECTORIES(${CUDA_INCLUDE_DIRS})
ENDIF(CUDA_FOUND)

ADD_LIBRARY(arcane_aleph_kappa ${ARCANE_ALEPH_KAPPA})

target_link_libraries(arcane_aleph_kappa ${ARCANE_BASE_LIBRARIES})
set_target_properties(arcane_aleph_kappa PROPERTIES INSTALL_RPATH_USE_LINK_PATH 1)
set_target_properties(arcane_aleph_kappa PROPERTIES INSTALL_RPATH ${CMAKE_INSTALL_PREFIX}/lib)

INSTALL(TARGETS arcane_aleph_kappa DESTINATION lib)
